answers,score
" The run time for this sorting program is n^2.  Best case is the list is already sorted, worst case is the list is sorted but in reverse. ",3.5
" Insertion sort is O(n) and performs n-1 operations in the best-case scenario, which is when the list or array is already sorted.",4.5
" The number of operations for insertions sort, under best-case, is  n(n-1)/2. The best case for insertion sort is on a sorted list where it runs is O(n). ",3
" Best case would be O(n) or n-1, because that's what it takes to scan the array and make one swap. The array would then be sorted and would take only 1 operation.",4
 Best case-1Worst Case-N,2
 It will do (n) operations where (n) is the number of elements in the array. Best case is when all the elements are already sorted.,5
 O(n),3.5
 Best case is all elements sorted.n-1.,4
" The best case scenario for an insertion sort, where all the elements of the array have been already sorted, will cause the for loop to iterate ""x"" times (""x"" being the number of elements in the array) and the while loop to never have to iterate, resulting in the insertion sort to require ""x"" operations. ",5
 1 operation. the best case scenario s where it is already sorted and does one comparision.,3
" n operations, where n is the number of items.",4
 n-1,3.5
" O(n), the list is already sorted.",4.5
 Insertion sort will take n-1 operations if the array is in reverse order.,4
" In the best case scenario of an already sorted list, insertion sort will progress once through the list.  So the number of operations is directly proportional to the number of elements in the list.  Also noted as O(n) in big o notation.",5
 1 where there is a list of two ints and only one must be moved.,2.5
" Best case is N, while the worst case is N factorial.",3
 n-1The best case is when the array is already sorted.,4.5
 worst case its = O(n) timebest case its = O(n^2) time,3
 O(n),3.5
 N number of times.  Where N equals the number of elements in the list.  Best-case scenario is that the elements in the list are already sorted.,5
 the best case scenario for insertion sort is a list that is already sorted. the number of operations would be the same as the number of elements,5
" insertion sort will make zero operations (and length - 1 comparisons) in the best case scenario, that is, when the array its given is already in order.",3.5
 theta(n)the best case senario is that everything is already sorted,4.5
 n operationsThe best case scenario is when all the numbers are in increasing order.,5
" it could be considered that having only one item would be the easiest to sort, but this could also be a trivial result as nothing is movedhaving two items allows the algorithm to sort the items into the correct order",2.5
 the best case is if it only has to look through the list once. The best case scenario is when it goes through the list and doesn't have to make any changes (the list is already sorted),4
 very simplistic it moves one element from the list by one and inserting them in their correct position into a new slot then starting over. best case is (0)1 ,2.5
